<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>手捧夕阳~blog</title>
  
  <subtitle>To be your well-know joy.</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-11-20T15:43:31.126Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>手捧夕阳</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>penetration-information</title>
    <link href="http://example.com/2022/11/20/penetration/"/>
    <id>http://example.com/2022/11/20/penetration/</id>
    <published>2022-11-20T14:40:54.000Z</published>
    <updated>2022-11-20T15:43:31.126Z</updated>
    
    <content type="html"><![CDATA[<h4 id="手捧夕阳blog-https-charonzhou-github-io"><a href="#手捧夕阳blog-https-charonzhou-github-io" class="headerlink" title="手捧夕阳blog https://charonzhou.github.io/"></a>手捧夕阳blog <a href="https://charonzhou.github.io/">https://charonzhou.github.io/</a></h4><h4 id="记录渗透笔记学习"><a href="#记录渗透笔记学习" class="headerlink" title="记录渗透笔记学习"></a>记录渗透笔记学习</h4><h6 id="This-is-an-artacle-about-network-information-collect"><a href="#This-is-an-artacle-about-network-information-collect" class="headerlink" title="This is an artacle about network information collect"></a>This is an artacle about network information collect</h6><p>俗话说知己知彼百战百胜，学习渗透的第一步应该从信息搜集开始学起<br>[<em><strong>个人理解每个人都有不同的看法</strong></em>]</br></p><h5 id="那信息搜集应该收集些什么东西"><a href="#那信息搜集应该收集些什么东西" class="headerlink" title="那信息搜集应该收集些什么东西"></a>那信息搜集应该收集些什么东西</h5><p>一般来说要收集这些信息，但不局限于这些：</br></p><ul><li>企业备案</li><li>域名</li><li>IP地址</li><li>端口</li><li>中间件</li><li>CMS</li><li>服务器系统</li><li>数据库</li><li>目录</li><li>WAF</li><li>泄露</li></ul><p>可以使用<a href="https://0.zone/">零零安信</a>对目标进行评估<br>零零信安能收集资产的信息系统暴露、移动端应用（APP、API、小程序、公众号）、敏感目录、邮箱泄露、文档和代码、域名、人员、DWM情报等，功能强大。</br></p><h4 id="信息收集流程"><a href="#信息收集流程" class="headerlink" title="信息收集流程"></a>信息收集流程</h4><hr><h5 id="1-查询资产的企业备案-收集到的信息要记录下来"><a href="#1-查询资产的企业备案-收集到的信息要记录下来" class="headerlink" title="1 查询资产的企业备案 [收集到的信息要记录下来]"></a>1 查询资产的企业备案 <strong>[收集到的信息要记录下来]</strong></h5><hr><h5 id="2-根据备案号查询企业拥有的域名，结合黑暗引擎与OneForAll工具查询这些域名的子域名-其他工具也可以"><a href="#2-根据备案号查询企业拥有的域名，结合黑暗引擎与OneForAll工具查询这些域名的子域名-其他工具也可以" class="headerlink" title="2 根据备案号查询企业拥有的域名，结合黑暗引擎与OneForAll工具查询这些域名的子域名 [其他工具也可以]"></a>2 根据备案号查询企业拥有的域名，结合黑暗引擎与OneForAll工具查询这些域名的子域名 <strong>[其他工具也可以]</strong></h5><ul><li><p>需要注意的是有些网站可能会使用CDN加速，你域名反查可能会查到那个CDN服务器上，那这样就是没有意义的信息收集，</p></li><li><p>我们一般用这两种方法来判断域名是否采用CDN加速：</p><ul><li>方法一：Ping多处。使用站长家的多址ping功能ping目标域名。获取多个独立IP地址时，采用CDN加速。</li><li>方法二：NSLOOKUP+域名。配合命令窗口中的NSLOOKUP+域名命令。当非权威响应中出现多个独立的IP地址时，说明采用了CDN加速。</li></ul></li><li><p>那么如何找到CDN加速域名的真实IP呢？有几种方法：</p><ul><li>方法一：DNS历史解析记录<ul><li>查询域名历史解析记录，可以找到网站使用CDN之前的解析记录，从而获取真实IP。</li></ul></li><li>方法二：子域名查询<ul><li>域名CDN加速需要付费给对应的CDN加速公司。很多情况下，只有主域名采用CDN加速，而没有采用子域名。这时候先查询对应的子域名，再反向查询子域名，得到真实IP。</li></ul></li><li>方法三：在国外很多地方ping<ul><li>很多国内CDN厂商因为各种原因只做国产线，但是国外线可能很少。这时候我们或许可以通过外部主机直接访问来获取真实IP。</li></ul></li><li>方法四：SSL证书查询<ul><li>证书颁发机构 (CAS) 必须将他们发布的每个 SSL&#x2F;TLS 证书发布到公共日志中。 SSL&#x2F;TLS 证书通常包含域名、子域名和电子邮件地址。</li></ul></li><li>方法五：邮寄<ul><li>许多网站都有发送电子邮件的功能，例如通过电子邮件注册和订阅网站内容。这时候查看邮件源码就会包含服务器的真实IP。检查电子邮件标头信息以查找真实 IP 地址。</br></li></ul></li></ul><p><strong>以上就是总结域名反查可能会查到CND之后的几种解决方法</strong>[有其他更好更方便的方法也可以]</p></li></ul><h5 id="3-上一步获取到域名之后可以用域名反查获取到真实IP地址，获取到之后分别能进行："><a href="#3-上一步获取到域名之后可以用域名反查获取到真实IP地址，获取到之后分别能进行：" class="headerlink" title="3 上一步获取到域名之后可以用域名反查获取到真实IP地址，获取到之后分别能进行："></a>3 上一步获取到域名之后可以用域名反查获取到真实IP地址，获取到之后分别能进行：</h5><ul><li><p>根据IP地址与域名查询开放的端口</p></li><li><p>使用工具扫描IP地址与域名获得中间件、CMS、服务器系统、数据库、目录、泄露信息</p></li></ul><h4 id="这些信息该如何去搜集"><a href="#这些信息该如何去搜集" class="headerlink" title="这些信息该如何去搜集"></a>这些信息该如何去搜集</h4><hr><h2 id="企业备案"><a href="#企业备案" class="headerlink" title="企业备案"></a>企业备案</h2><ul><li>一家公司开设网站需要对网站进行备案，备案号一般在网站的最底部可以查到。根据查到的网站，可以进行查询后得到该公司的其他注册域名，以下网站常用于企业备案查询：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://beian.miit.gov.cn</span><br></pre></td></tr></table></figure></li><li>若是想得到公司的其他信息，可以到企业查询网站查询，在这些网站里能查到目标公司的网站，电话，负责人等信息，为后面的信息收集与网站渗透提供参考，以下网站常用于企业查询：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://aiqicha.baidu.com（爱企查）</span><br><span class="line">https://www.qcc.com（企查查）</span><br><span class="line">https://www.tianyancha.com（天眼查）</span><br></pre></td></tr></table></figure></li></ul><h5 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h5><hr><p>域名能通过DNS来解析回IP，其中域名分为顶级域名，二级域名，三级域名等</p><p>​               tieba.baidu.com<br>​                                                             ↑         ↑         ↑<br>​                                           三级域名.二级域名.顶级域名</p><p>对于安全测试的意义：</p><ul><li>相同的二级域名的网站架构、源码、密码可能相似</li><li>两个网站的域名解析的IP地址可能相同</li></ul><p>子域名的获取方式有爆破，搜索，JS查找，证书查找，DNS搜索，OneForAll搜索</p><h5 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h5><p>分享两个常用的爆破工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">子域名挖掘机:https://pan.baidu.com/s/1qL1XYr9hhmlm_EleTEl0SQ 提取码:ews7</span><br><span class="line">ksubdomain：https://github.com/knownsec/ksubdomain  [无状态子域名爆破工具]</span><br></pre></td></tr></table></figure><hr><h5 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h5><p>搜索主要是使用搜索引擎进行搜索，例如<a href="https://www.baidu.com/">百度</a>、<a href="http://google.com/">谷歌</a>、<a href="https://fofa.info/">fofa</a>、<a href="https://hunter.qianxin.com/">hunter</a>、<a href="https://www.shodan.io/">shodan</a>、<a href="https://www.zoomeye.org/">zoomeye</a></p><p>在使用黑暗搜索引擎时，经常会出现与目标公司不相关的URL，这时就能通过下载该网站的favicon.ico文件并查看</p><p><strong>获得favicon.ico文件方法：</strong></p><ul><li>方法一<ul><li>直接在网站网址后面加favicon.ico</li></ul></li><li>方法二<ul><li>F12或者右键查看网页源代码，链接头部指向即为favicon.ico的地址</li></ul></li><li>方法三<ul><li><a href="http://www.google.com/s2/favicons?domain=%E7%BD%91%E7%AB%99%E5%9C%B0%E5%9D%80">http://www.google.com/s2/favicons?domain=网站地址</a></li></ul></li></ul><hr><p>以下为常用的<strong>google hack搜索语法</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">site     指定域名</span><br><span class="line">intext   正文中存在关键字的网页</span><br><span class="line">intitle  标题中存在关键字的网页</span><br><span class="line">info     一些基本信息</span><br><span class="line">inurl    URL存在关键字的网页</span><br><span class="line">filetype 搜索指定文件类型</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">搜索子域名：site:baidu.com</span><br></pre></td></tr></table></figure><hr><p>在线搜索的网站有：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://rapiddns.io/subdomain</span><br><span class="line">https://phpinfo.me/domain/</span><br><span class="line">http://whois.chinaz.com/（whois查询）</span><br></pre></td></tr></table></figure><hr><h5 id="JS查找"><a href="#JS查找" class="headerlink" title="JS查找"></a>JS查找</h5><p>JS查询为使用<a href="https://github.com/Threezh1/JSFinder">JSFinder工具</a>通过正则表达式获取URL与子域名。</p><hr><h5 id="证书查找"><a href="#证书查找" class="headerlink" title="证书查找"></a>证书查找</h5><p>查询HTTPS证书能查询到子域名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://crt.sh/</span><br></pre></td></tr></table></figure><hr><h5 id="DNS搜索"><a href="#DNS搜索" class="headerlink" title="DNS搜索"></a>DNS搜索</h5><p>查询DNS能查询到该域下的解析记录，从而有可能获得子域名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://dnsdb.io/zh-cn/</span><br></pre></td></tr></table></figure><hr><h5 id="OneForAll搜索"><a href="#OneForAll搜索" class="headerlink" title="OneForAll搜索"></a>OneForAll搜索</h5><p>OneForAll工具是集合了各种方法的子域名收集工具，因此功能很强大</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/shmilylty/OneForAll</span><br></pre></td></tr></table></figure><hr><h2 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h2><p>获得一个网站的真实IP是极其重要的，原因如下：</p><ul><li>获取到IP地址后可以使用nmap扫出开放的端口[其他工具也可以，我用nmap较多就拿这个举例]</li><li>扫描IP地址为扫描网站的上一级文件夹</li><li>很多网站在其上一级有可能有该网站的源码备份</li></ul><p>一个IP地址能分为5个段IP地址</p><ul><li><p>A类地址 ：<br>  一个A类IP地址由1字节的网络地址和3字节主机地址组成，它主要为大型网络而设计的，网络地址的最高位必须是“0”， 地址范围从1.0.0.0 到127.0.0.0）。可用的A类网络有127个，每个网络能容纳16777214个主机。其中127.0.0.1是一个特殊的IP地址，表示主机本身，用于本地机器的测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注：</span><br><span class="line">    A:0-127，其中0代表任何地址，127为回环测试地址，因此，A类ip地址的实际范围是1-126.</span><br><span class="line">    默认子网掩码为255.0.0.0</span><br></pre></td></tr></table></figure></li><li><p>B类地址 ：<br>一个B类IP地址由2个字节的网络地址和2个字节的主机地址组成，网络地址的最高位必须是“10”，地址范围从128.0.0.0到191.255.255.255。可用的B类网络有16382个，每个网络能容纳6万多个主机 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注：</span><br><span class="line">    B:128-191，其中128.0.0.0和191.255.0.0为保留ip，实际范围是128.1.0.0--191.254.0.0</span><br></pre></td></tr></table></figure></li><li><p>C类IP地址 ：<br>一个C类IP地址由3字节的网络地址和1字节的主机地址组成，网络地址的最高位必须是“110”。范围从192.0.0.0到223.255.255.255。C类网络可达209万余个，每个网络能容纳254个主机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注：C:192-223，其中192.0.0.0和223.255.255.0为保留ip，实际范围是192.0.1.0--223.255.254.0</span><br></pre></td></tr></table></figure></li><li><p>D类IP地址：<br>用于多点广播（Multicast）。 D类IP地址第一个字节以“lll0”开始，它是一个专门保留的地址。它并不指向特定的网络，目前这一类地址被用在多点广播（Multicast）中。多点广播地址用来一次寻址一组计算机，它标识共享同一协议的一组计算机。224.0.0.0到239.255.255.255用于多点广播 </p></li><li><p>E类IP地址<br>  以“llll0”开始，为将来使用保留。240.0.0.0到255.255.255.254，255.255.255.255用于广播地址。</p><p>  全零（“0．0．0．0”）地址对应于当前主机。全“1”的IP地址（“255．255．255．255”）是当前子网的广播地址。</p></li></ul><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><p>介绍：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">全称:Content Delivery Network或Content Ddistribute Network 即内容分发网络</span><br></pre></td></tr></table></figure><p>概念：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上</span><br></pre></td></tr></table></figure><p>作用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">解决因分布、带宽、服务器性能带来的访问延迟问题，适用于站点加速、点播、直播等场景。使用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度和成功率。</span><br><span class="line"></span><br><span class="line">控制时延无疑是现代信息科技的重要指标，CDN的意图就是尽可能的减少资源在转发、传输、链路抖动等情况下顺利保障信息的连贯性</span><br></pre></td></tr></table></figure><p>架构：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">当用户点击网站页面上的内容URL，经过本地DNS系统解析，DNS系统会最终将域名的解析权交给CNAME指向的CDN专用DNS服务器。</span><br><span class="line">CDN的DNS服务器将CDN的全局负载均衡设备IP地址返回用户。</span><br><span class="line">用户向CDN的全局负载均衡设备发起内容URL访问请求。</span><br><span class="line">CDN全局负载均衡设备根据用户IP地址，以及用户请求的内容URL，选择一台用户所属区域的区域负载均衡设备，告诉用户向这台设备发起请求。</span><br><span class="line">区域负载均衡设备会为用户选择一台合适的缓存服务器提供服务，选择的依据包括：根据用户IP地址，判断哪一台服务器距用户最近；根据用户所请求的URL中携带的内容名称，判断哪一台服务器上有用户所需内容；查询各个服务器当前的负载情况，判断哪一台服务器尚有服务能力。基于以上这些条件的综合分析之后，区域负载均衡设备会向全局负载均衡设备返回一台缓存服务器的IP地址。</span><br><span class="line">全局负载均衡设备把服务器的IP地址返回给用户。</span><br><span class="line">用户向缓存服务器发起请求，缓存服务器响应用户请求，将用户所需内容传送到用户终端。如果这台缓存服务器上并没有用户想要的内容，而区域均衡设备依然将它分配给了用户，那么这台服务器就要向它的上一级缓存服务器请求内容，直至追溯到网站的源服务器将内容拉到本地。</span><br></pre></td></tr></table></figure><h4 id="无CDN"><a href="#无CDN" class="headerlink" title="无CDN"></a>无CDN</h4><p>获取一个域名对应的IP需要分析其有没有CDN，判断方法为使用<a href="https://ping.chinaz.com/">超级ping</a>，若每个地方的IP地址不同，就是有CDN，若无则否</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">若是没有用CDN的话直接用`ping`命令就能够获取真实的IP</span><br></pre></td></tr></table></figure><h4 id="有CDN"><a href="#有CDN" class="headerlink" title="有CDN"></a>有CDN</h4><ol><li>网站的各个子域名可能在1-254区间内，或者不同的网段，因此可以测试区域内不同IP来获取真实IP</li><li>有些网站只对加www的网站加CDN，所以无www的网站有可能为真实IP</li><li>根据备案信息注册的省份来判断域名所在地</li><li>有些网站仅仅在国内有CDN，所以可以使用<a href="https://ping.chinaz.com/">超级ping</a>来判断真实IP</li><li>有些网站仅仅主站有CDN，而分站没有，所以可以根据分站IP判断真实IP</li><li>可以通过注册账号获取验证码的方式获取目标网站向自己发送的邮件，然后使用foxmail打开查看源码，以此获得真实IP</li><li>使用<a href="https://fofa.info/">fofa</a>、<a href="https://hunter.qianxin.com/">hunter</a>、<a href="https://www.shodan.io/">shodan</a>、<a href="https://www.zoomeye.org/">zoomeye</a>搜索指定关键字，以此来获得真实IP</li><li>查询DNS记录来查询真实IP</li><li>使用<a href="https://github.com/boy-hack/w8fuckcdn">w8fuckcun</a>、<a href="https://github.com/Tai7sy/fuckcdn">fuckcdn</a>工具扫描全网来获得真实IP</li><li>使用<a href="https://x.threatbook.com/">微步</a>查询历史记录，有可能查到网站没加CDN之前的IP记录</li><li>使用VPN挂全局代理后<code>ping</code>目标网站</li><li>使用<a href="https://get-site-ip.com/">get-site-ip</a>网站查询真实IP，有可能不准确，需要借助以上思路进行判断</li><li>利用网站favicon.ico地址的hash值在shodan搜索，具体参考<a href="https://mp.weixin.qq.com/s?__biz=MzA5MzQ3MDE1NQ==&mid=2653939118&idx=1&sn=945b81344d9c89431a8c413ff633fc3a&chksm=8b86290abcf1a01cdc00711339884602b5bb474111d3aff2d465182702715087e22c852c158f&token=268417143&lang=zh_CN#rd">该链接</a></li></ol><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>端口的范围是从0到65535，其中端口分为3大类：</p><ul><li>公认端口：<br> 从0-1023，这些端口绑定了一些明确服务的协议</li><li>注册端口：<br>从1024到49151，这些端口松散绑定一下服务</li><li>动态端口：<br>从49152到65535，这些端口并不常用</li></ul><h4 id="端口收集常使用nmap来进行探测，以下为快速扫描指令："><a href="#端口收集常使用nmap来进行探测，以下为快速扫描指令：" class="headerlink" title="端口收集常使用nmap来进行探测，以下为快速扫描指令："></a>端口收集常使用nmap来进行探测，以下为快速扫描指令：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -Pn -open -T4</span><br><span class="line">nmap -sS -Pn -n --open --min-hostgroup 4 --min-parallelism 1024 --host-timeout 30 -T4</span><br></pre></td></tr></table></figure><h4 id="其他扫描工具有御剑高速TCP端口扫描工具、masscan、Goby"><a href="#其他扫描工具有御剑高速TCP端口扫描工具、masscan、Goby" class="headerlink" title="其他扫描工具有御剑高速TCP端口扫描工具、masscan、Goby"></a>其他扫描工具有御剑高速TCP端口扫描工具、<a href="https://github.com/robertdavidgraham/masscan">masscan</a>、Goby</h4><h5 id="也可以使用在线的方式探测端口："><a href="#也可以使用在线的方式探测端口：" class="headerlink" title="也可以使用在线的方式探测端口："></a>也可以使用在线的方式探测端口：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://coolaf.com/tool/port</span><br><span class="line">https://saomiao.bmcx.com/</span><br><span class="line">https://tool.chinaz.com/port/www.gdsslxh.org.cn</span><br></pre></td></tr></table></figure><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><p>中间件为网站搭建平台，是网站的一个框架，常见中间件为iis、apache、tomcat、nginx、thinkphp、structs2等</p><p>通常使用<a href="https://github.com/P1-Team/AlliN">AlliN</a>、<a href="https://github.com/s7ckTeam/Glass">Glass</a>、<a href="https://github.com/EdgeSecurityTeam/EHole">EHole</a>、<a href="https://github.com/zhzyker/dismap">dismap</a>等工具进行查看</p><p>也可以通过观察网站的后缀进行判断，比如<code>.net.php.asp</code>后缀的网站的中间件一般为IIS</p><h4 id="CMS"><a href="#CMS" class="headerlink" title="CMS"></a>CMS</h4><p>CMS为一个网站的模板，这个模板已经被设计好，使用前只需要使用者根据自己的需求进行更改，识别CMS能使用特定的攻击方式来进行渗透。</p><p>在识别CMS前，可以使用先用7kbscan工具进行扫描，看看是否能扫出源码备份文件或者数据库备份文件。</p><p>以下网站能查看ASP,PHP,ASPX,JSP,JAVAWEB 等脚本类型源码安全问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://websec.readthedocs.io/zh/latest/language/index.html</span><br></pre></td></tr></table></figure><p>以下为识别方法：</p><ol><li><p>在一些网站的最下面会有CMS的名字</p></li><li><p>访问CMS的特定路径查看是否能访问来判断CMS</p></li><li><p>使用kali中的<code>whatweb</code>命令进行扫描</p></li><li><p>使用浏览器中的<code>wappalyzer</code>插件进行查看</p></li><li><p>使用<a href="https://dl.pconline.com.cn/download/2717861.html">御剑WEB指纹识别系统</a>来进行扫描</p></li><li><p>下载网站的ico文件查看（即favicon.ico文件）</p></li><li><p>使用<a href="https://github.com/P1-Team/AlliN">AlliN</a>、<a href="https://github.com/s7ckTeam/Glass">Glass</a>、<a href="https://github.com/EdgeSecurityTeam/EHole">EHole</a>、<a href="https://github.com/zhzyker/dismap">dismap</a>等工具进行查看</p></li><li><p>使用在线网站进行查看，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.yunsee.cn/</span><br><span class="line">http://whatweb.bugscaner.com/（云悉）</span><br></pre></td></tr></table></figure></li></ol><p> 若是以上方法无法找到源码备份原件和CMS，则可以通过<a href="https://www.charlesproxy.com/download/">Charles工具</a>来描绘网站，该工具能自动对访问的URL进行归类整理，点击的越多，得到网站的全貌就越完整。</p><h2 id="服务器系统"><a href="#服务器系统" class="headerlink" title="服务器系统"></a>服务器系统</h2><p>常见的服务器系统为windows与linux，获得操作系统的信息可以根据操作系统的特性进行特定的渗透攻击，如对window7可以使用永恒之蓝进行攻击。 </p><p>以下为分辨的方法：</p><ol><li><p>为查看网站对大小写是否区分，区分大小写的为linux，不区分大小写的为windows</p></li><li><p>根据TTL值判断操作系统，但TTL值可以修改，有可能会误导我们，以下为默认操作系统TTL（TTL可以通过在<code>CMD</code>中<code>PING</code>目标网站查看）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">WINDOWS NT/2000             TTL：128</span><br><span class="line">WINDOWS 95/98               TTL：32</span><br><span class="line">UNIX                        TTL：255</span><br><span class="line">LINUX                       TTL：64</span><br><span class="line">WIN7                        TTL：64</span><br></pre></td></tr></table></figure></li><li><p>使用<code>nmap</code>命令的<code>-O</code>参数来进行探测</p></li></ol><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>数据库能为网站存储信息，不同的数据库有不同的漏洞，因此得知该网站的数据库是很有必要的，以下为识别方法：</p><ol><li><p>根据网站的文件来识别：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">asp     access </span><br><span class="line">php     mysql </span><br><span class="line">aspx    mssql </span><br><span class="line">jsp     mssql,oracle </span><br><span class="line">python  mogodb</span><br></pre></td></tr></table></figure></li><li><p>通过操作系统来判断数据库，有一些数据库只能在特定操作系统中才能运行，比如window下才有access，sqlserver</p></li><li><p>使用nmap指令进行探测端口，根据端口号来判断：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql      3306</span><br><span class="line">mssql      1433</span><br><span class="line">oracle     1511</span><br><span class="line">mongodb    27017</span><br><span class="line">redis      6379</span><br><span class="line">memcached  11211</span><br></pre></td></tr></table></figure></li><li><p>通过<code>nmap -O -sV ip地址</code>的方式扫描能获得apache和php和mysql版本</p></li></ol><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>目录作为网站的基本结构之一，能方便浏览者和管理者区分。</p><p>通常能用<a href="https://www.charlesproxy.com/download/">Charles工具</a>、<a href="https://github.com/maurosoria/dirsearch">dirsearch</a>、<a href="https://github.com/Threezh1/JSFinder">JSFinder工具</a>、<a href="https://github.com/foryujian/yjdirscan">御剑目录扫描专业版</a>进行目录扫描</p><h2 id="WAF"><a href="#WAF" class="headerlink" title="WAF"></a>WAF</h2><p>WAF为WEB应用防护系统，用于隔离外界的非法请求</p><p>有些WAF还能作为网站的中间件，如宝塔，phpStudy，inmap等等</p><p>识别WAF对于安全测试的意义在于不能对有WAF的网站使用扫描工具扫描</p><p>以下为识别WAF的方法：</p><ol><li>使用<a href="https://github.com/EnableSecurity/wafw00f">wafw00f</a>工具进行识别</li><li>利用浏览器抓包识别<code>X-Powered-By</code></li></ol><h2 id="泄露"><a href="#泄露" class="headerlink" title="泄露"></a>泄露</h2><p>泄露分为SVN泄露、HG泄露、GIT泄露、VIM缓存泄露、备份文件泄露、PHP备份文件泄露、gedit备份文件泄露</p><h3 id="SVN泄露"><a href="#SVN泄露" class="headerlink" title="SVN泄露"></a>SVN泄露</h3><p>SVN是源代码版本管理软件。</p><p>在使用SVN管理本地代码过程中，会自动生成一个隐藏文件夹，其中包含重要的源代码信息。但一些网站管理员在发布代码时，不愿意使用‘导出’功能，而是直接复制代码文件夹到WEB服务器上，这就使隐藏文件夹被暴露于外网环境，这使得渗透工程师可以借助其中包含版本信息追踪的网站文件，逐步摸清站点结构。</p><p>在服务器上布署代码时，如果是使用 <code>svn checkout</code> 功能来更新代码，项目目录下会生成隐藏的<code>.svn</code>文件夹（Linux上用<code>ls</code>命令看不到，要用<code>ls -al</code>命令），若没有配置好目录访问权限，则会存在此漏洞。黑客利用此漏洞，可以下载整套网站的源代码。</p><p>svn1.6及以前版本会在项目的每个文件夹下都生成一个.svn文件夹，里面包含了所有文件的备份，文件名为 .svn&#x2F;text-base&#x2F;文件名.svn-base。</p><p>  svn1.7及以后版本则只在项目根目录生成一个.svn文件夹，里面的pristine文件夹里包含了整个项目的所有文件备份。</p><p>使用<a href="https://github.com/kost/dvcs-ripper">dvcs-ripper</a>工具能对网站扫描SVN</p><h3 id="HG泄露"><a href="#HG泄露" class="headerlink" title="HG泄露"></a>HG泄露</h3><p>当开发人员使用 Mercurial 进行版本控制，对站点自动部署。如果配置不当,可能会将.hg 文件夹直接部署到线上环境。这就引起了 hg 泄露漏洞。</p><p>使用<a href="https://github.com/kost/dvcs-ripper">dvcs-ripper</a>)工具能对网站扫描HG</p><h3 id="vim缓存"><a href="#vim缓存" class="headerlink" title="vim缓存"></a>vim缓存</h3><ul><li>vim 交换文件名</li><li>在使用vim时会创建临时缓存文件，关闭vim时缓存文件则会被删除，当vim异常退出后，因为未处理缓存文件，导致可以通过缓存文件恢复原始文件内容</li><li>以 index.php 为例：第一次产生的交换文件名为 .index.php.swp</li><li>再次意外退出后，将会产生名为 .index.php.swo 的交换文件</li><li>第三次产生的交换文件则为 .index.php.swn</li></ul><h3 id="git泄露"><a href="#git泄露" class="headerlink" title="git泄露"></a>git泄露</h3><p>当前大量开发人员使用git进行版本控制，对站点自动部署。如果配置不当,可能会将<code>.git</code>文件夹直接部署到线上环境。这就引起了git泄露漏洞。</p><p><a href="https://github.com/maurosoria/dirsearch">dirsearch工具</a>扫描目录后有可能扫出<code>.git</code>目录，之后使用<a href="https://github.com/lijiejie/GitHack">GitHack工具</a>能获取该文件</p><h3 id="备份文件泄露"><a href="#备份文件泄露" class="headerlink" title="备份文件泄露"></a>备份文件泄露</h3><ul><li><p>常见的网站<a href="https://so.csdn.net/so/search?q=%E6%BA%90%E7%A0%81&spm=1001.2101.3001.7020">源码</a>备份文件后缀</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar</span><br><span class="line">tar.gz</span><br><span class="line">zip</span><br><span class="line">rar</span><br></pre></td></tr></table></figure></li><li><p>常见的网站源码备份文件名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">web</span><br><span class="line">website</span><br><span class="line">backup</span><br><span class="line">back</span><br><span class="line">www</span><br><span class="line">wwwroot</span><br><span class="line">Temp</span><br></pre></td></tr></table></figure></li><li><p>可以使用7kbscan扫描</p></li><li><p>bak是备份文件，为文件格式扩展名。这类文件一般在.bak前面加上应该有原来的扩展名比如windows.dll.bak，或是windows_dll.bak，有的则是由原文件的后缀名和bak混合而成。</p></li><li><p>常见备份文件后缀：“.git” 、“.svn”、“ .swp” “.~”、“.bak”、“.bash_history”、“.bkf”</p></li><li><p>访问隐藏文件时前面加”.”</p></li></ul><h3 id="PHP备份文件泄露"><a href="#PHP备份文件泄露" class="headerlink" title="PHP备份文件泄露"></a>PHP备份文件泄露</h3><ul><li>.phps后缀释义： phps文件就是php的源代码文件。</li><li>通常用于提供给用户（访问者）查看php代码，因为用户无法直接通过Web浏览器看到php文件的内容，所以需要用phps文件代替</li></ul><h3 id="gedit备份文件泄露"><a href="#gedit备份文件泄露" class="headerlink" title="gedit备份文件泄露"></a>gedit备份文件泄露</h3><p>在Linux下，用gedit编辑器保存后，<strong>当前目录下会生成一个后缀为“</strong> <strong>~</strong> <strong>”的文件</strong>，其文件内容就是刚编辑的内容.假设刚才保存的文件名为flag，则该文件名为flag~，见图1-1-7.通过浏览器访问这个带有“ ~ ”的文件，便可以得到源代码。</p><h2 id="工具扫描"><a href="#工具扫描" class="headerlink" title="工具扫描"></a>工具扫描</h2><p>在得到资产的网站后，可以使用扫描器去扫描网站存在的漏洞</p><p>最常用的扫描器有<a href="https://github.com/chaitin/xray">Xray</a>、<a href="https://www.iculture.cc/software/pig=20578">awvs</a>（该链接迅雷不能下载）、<a href="https://www.iculture.cc/software/pig=22122">nessus</a>（该链接迅雷不能下载）</p><h2 id="漏洞库"><a href="#漏洞库" class="headerlink" title="漏洞库"></a>漏洞库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/binganao/vulns-2022</span><br><span class="line">https://github.com/helloexp/0day</span><br><span class="line">https://github.com/helloexp/vulhub</span><br><span class="line">https://github.com/helloexp/CVE-Exploits</span><br><span class="line">https://github.com/UzJu/0day</span><br><span class="line">https://github.com/faisalfs10x/CVE-IDs</span><br><span class="line">https://github.com/YinWC/2021hvv_vul</span><br><span class="line">https://github.com/dingxiao77/redteam_vul</span><br><span class="line">https://github.com/BaizeSec/bylibrary/tree/main/docs/%E6%BC%8F%E6%B4%9E%E5%BA%93</span><br><span class="line">https://baizesec.github.io/bylibrary/%E6%BC%8F%E6%B4%9E%E5%BA%93/01-CMS%E6%BC%8F%E6%B4%9E/ActiveMQ/ActiveMQ%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</span><br><span class="line">https://forum.ywhack.com/bountytips.php?Vulnerability</span><br><span class="line">https://github.com/r0eXpeR/supplier</span><br><span class="line">https://my.oschina.net/u/4354006/blog/3322916</span><br><span class="line">https://github.com/projectdiscovery/nuclei-templates</span><br><span class="line">https://github.com/DawnFlame/POChouse</span><br></pre></td></tr></table></figure><p><a href="https://github.com/PeiQi0/PeiQi-WIKI-Book">peiqi</a>漏洞库</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;手捧夕阳blog-https-charonzhou-github-io&quot;&gt;&lt;a href=&quot;#手捧夕阳blog-https-charonzhou-github-io&quot; class=&quot;headerlink&quot; title=&quot;手捧夕阳blog https://charo</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>linux-ten-monitor-tools</title>
    <link href="http://example.com/2022/11/18/linux-ten-monitor-tools/"/>
    <id>http://example.com/2022/11/18/linux-ten-monitor-tools/</id>
    <published>2022-11-18T14:59:57.000Z</published>
    <updated>2022-11-18T15:05:50.224Z</updated>
    
    <content type="html"><![CDATA[<h1 id="每个系统管理员应该知道的10个监控工具"><a href="#每个系统管理员应该知道的10个监控工具" class="headerlink" title="每个系统管理员应该知道的10个监控工具"></a>每个系统管理员应该知道的10个监控工具</h1><p>10 Linux System Monitoring Tools Every SysAdmin Should Know</p><hr><h1 id="这是一篇关于检测工具该如何使用的文章"><a href="#这是一篇关于检测工具该如何使用的文章" class="headerlink" title="这是一篇关于检测工具该如何使用的文章"></a>这是一篇关于检测工具该如何使用的文章</h1><h2 id="welcome-to-my-blog-This-is-an-article-about-how-monitoring-tools-should-be-used"><a href="#welcome-to-my-blog-This-is-an-article-about-how-monitoring-tools-should-be-used" class="headerlink" title="welcome to my blog. This is an article about how monitoring tools should be used."></a>welcome to my blog. This is an article about how monitoring tools should be used.</h2><p><img src="https://img0.baidu.com/it/u=3913065987,310108978&fm=253&fmt=auto&app=138&f=JPEG?w=890&h=500" width="50%"></br><br>可莉会监督你好好学习<br></br>适用于但不仅限于这些系统   [没写那么多其实是因为懒 <del>_</del>]</p><table><thead><tr><th align="center">ID</th><th align="center">sysctem</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">Centos</td></tr><tr><td align="center">2</td><td align="center">Debian</td></tr><tr><td align="center">3</td><td align="center">Ubuntu</td></tr><tr><td align="center">…</td><td align="center">…</td></tr></tbody></table><hr><h1 id="1-如何查看活动进程呢？"><a href="#1-如何查看活动进程呢？" class="headerlink" title="1 如何查看活动进程呢？"></a>1 如何查看活动进程呢？</h1><h2 id="top-进程活动监视命令"><a href="#top-进程活动监视命令" class="headerlink" title="top - 进程活动监视命令"></a>top - 进程活动监视命令</h2><p>Process activity monitoring command</p><p>top命令显示Linux进程信息。它提供了运行系统的动态实时视图，即实际的流程活动。默认情况下，它显示服务器上运行的cpu密集型任务最多的任务，并每5秒更新一次列表,还可以键入enter进行查看，键入Ctrl + C 进行关闭。<br></br>如下图<br></br><br><img src="https://www.cyberciti.biz/tips/wp-content/uploads/2009/06/top-Linux-monitoring-command.jpg"></br></p><h3 id="常用的top命令及其需要添加的参数"><a href="#常用的top命令及其需要添加的参数" class="headerlink" title="常用的top命令及其需要添加的参数"></a>常用的top命令及其需要添加的参数</h3><p>参考下表</p><table><thead><tr><th align="center">Key</th><th align="center">Usage</th></tr></thead><tbody><tr><td align="center">t</td><td align="center">关闭和打开显示摘要信息</td></tr><tr><td align="center">m</td><td align="center">关闭和打开显示内存信息</td></tr><tr><td align="center">A</td><td align="center">根据各种系统资源的顶级使用者对显示进行排序。用于快速识别系统上需要性能的任务</td></tr><tr><td align="center">f</td><td align="center">进入top的交互式配置屏幕。有助于为特定的任务设置顶部</td></tr><tr><td align="center">o</td><td align="center">使您能够以交互方式选择top中的顺序</td></tr><tr><td align="center">r</td><td align="center">发出renice命令[renice:重新指定一个或多个进程的优先级]</td></tr><tr><td align="center">k</td><td align="center">发出kill命令</td></tr><tr><td align="center">z</td><td align="center">打开或关闭颜色&#x2F;单色</td></tr></tbody></table><hr><h1 id="2-Linux如何查找CPU利用率？"><a href="#2-Linux如何查找CPU利用率？" class="headerlink" title="2 Linux如何查找CPU利用率？"></a>2 Linux如何查找CPU利用率？</h1><p>How do I Find Out Linux CPU Utilization?</p><h2 id="vmstat-命令报告有关进程、内存、分页、块IO、trap和cpu活动的信息"><a href="#vmstat-命令报告有关进程、内存、分页、块IO、trap和cpu活动的信息" class="headerlink" title="vmstat 命令报告有关进程、内存、分页、块IO、trap和cpu活动的信息"></a>vmstat 命令报告有关进程、内存、分页、块IO、trap和cpu活动的信息</h2><p>The vmstat command reports information about processes, memory, paging, block IO, traps, and cpu activity.<br>vmstat - 虚拟内存统计信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vmstat 3</span><br></pre></td></tr></table></figure><p>参考下图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu------</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st</span><br><span class="line"> 0  0      0 2540988 522188 5130400    0    0     2    32    4    2  4  1 96  0  0</span><br><span class="line"> 1  0      0 2540988 522188 5130400    0    0     0   720 1199  665  1  0 99  0  0</span><br><span class="line"> 0  0      0 2540956 522188 5130400    0    0     0     0 1151 1569  4  1 95  0  0</span><br><span class="line"> 0  0      0 2540956 522188 5130500    0    0     0     6 1117  439  1  0 99  0  0</span><br><span class="line"> 0  0      0 2540940 522188 5130512    0    0     0   536 1189  932  1  0 98  0  0</span><br><span class="line"> 0  0      0 2538444 522188 5130588    0    0     0     0 1187 1417  4  1 96  0  0</span><br><span class="line"> 0  0      0 2490060 522188 5130640    0    0     0    18 1253 1123  5  1 94  0  0</span><br></pre></td></tr></table></figure><h3 id="显示内存利用率Slabinfo"><a href="#显示内存利用率Slabinfo" class="headerlink" title="显示内存利用率Slabinfo"></a>显示内存利用率Slabinfo</h3><p>Display Memory Utilization Slabinfo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmstat -m</span><br></pre></td></tr></table></figure><h3 id="获取有关活动-x2F-非活动内存页的信息"><a href="#获取有关活动-x2F-非活动内存页的信息" class="headerlink" title="获取有关活动&#x2F;非活动内存页的信息"></a>获取有关活动&#x2F;非活动内存页的信息</h3><p>Get Information About Active &#x2F; Inactive Memory Pages</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmstat -a</span><br></pre></td></tr></table></figure><h4 id="如何查找Linux资源利用率以检测系统瓶颈"><a href="#如何查找Linux资源利用率以检测系统瓶颈" class="headerlink" title="如何查找Linux资源利用率以检测系统瓶颈?"></a>如何查找Linux资源利用率以检测系统瓶颈?</h4><h4 id="Linux查找哪些进程正在使用交换空间"><a href="#Linux查找哪些进程正在使用交换空间" class="headerlink" title="Linux查找哪些进程正在使用交换空间"></a>Linux查找哪些进程正在使用交换空间</h4><p>可以使用 smem 命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smem</span><br></pre></td></tr></table></figure><h3 id="另一种选择是将pgrep-command与grep命令结合使用，以查找SWAP-mem的使用情况"><a href="#另一种选择是将pgrep-command与grep命令结合使用，以查找SWAP-mem的使用情况" class="headerlink" title="另一种选择是将pgrep command与grep命令结合使用，以查找SWAP mem的使用情况:"></a>另一种选择是将pgrep command与grep命令结合使用，以查找SWAP mem的使用情况:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pgrep memcached</span><br><span class="line">grep --color VmSwap /proc/48440/status</span><br></pre></td></tr></table></figure><p><img src="https://www.cyberciti.biz/media/new/faq/2013/01/swapping-command.png"></br><br>Linux查找哪些进程正在使用交换空间</p><hr><h1 id="3-w-查找谁登录了系统以及他们在做什么"><a href="#3-w-查找谁登录了系统以及他们在做什么" class="headerlink" title="3 w - 查找谁登录了系统以及他们在做什么"></a>3 w - 查找谁登录了系统以及他们在做什么</h1><p>We use the w command displays information about the users currently on the machine, and their processes.</p><h4 id="我们可以使用-w-命令显示当前机器上的用户，及其进程信息"><a href="#我们可以使用-w-命令显示当前机器上的用户，及其进程信息" class="headerlink" title="我们可以使用 w 命令显示当前机器上的用户，及其进程信息"></a>我们可以使用 w 命令显示当前机器上的用户，及其进程信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># w username</span><br><span class="line"># w vivek</span><br></pre></td></tr></table></figure><hr><h1 id="4-uptime-告诉我们Linux系统已经运行了多长时间。我们使用uptime命令来查看服务器已经运行了多长时间。当前时间、系统运行了多长时间、当前有多少用户登录，以及过去1分钟、5分钟和15分钟的系统负载平均值。"><a href="#4-uptime-告诉我们Linux系统已经运行了多长时间。我们使用uptime命令来查看服务器已经运行了多长时间。当前时间、系统运行了多长时间、当前有多少用户登录，以及过去1分钟、5分钟和15分钟的系统负载平均值。" class="headerlink" title="4 uptime - 告诉我们Linux系统已经运行了多长时间。我们使用uptime命令来查看服务器已经运行了多长时间。当前时间、系统运行了多长时间、当前有多少用户登录，以及过去1分钟、5分钟和15分钟的系统负载平均值。"></a>4 uptime - 告诉我们Linux系统已经运行了多长时间。我们使用uptime命令来查看服务器已经运行了多长时间。当前时间、系统运行了多长时间、当前有多少用户登录，以及过去1分钟、5分钟和15分钟的系统负载平均值。</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># uptime</span><br></pre></td></tr></table></figure><hr><h1 id="5-ps-显示Linux进程使用ps命令报告Linux下当前进程的快照。要选择所有的进程，通过下面的-A或-e选项"><a href="#5-ps-显示Linux进程使用ps命令报告Linux下当前进程的快照。要选择所有的进程，通过下面的-A或-e选项" class="headerlink" title="5 ps -显示Linux进程使用ps命令报告Linux下当前进程的快照。要选择所有的进程，通过下面的-A或-e选项"></a>5 ps -显示Linux进程使用ps命令报告Linux下当前进程的快照。要选择所有的进程，通过下面的-A或-e选项</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># ps -A</span><br></pre></td></tr></table></figure><img src="https://wx2.sinaimg.cn/mw2000/0033ImPzly1h86nc44c04j61400u00y502.jpg"><p>命令操作图如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> PID TTY          TIME CMD</span><br><span class="line">    1 ?        00:00:02 init</span><br><span class="line">    2 ?        00:00:02 migration/0</span><br><span class="line">    3 ?        00:00:01 ksoftirqd/0</span><br><span class="line">    4 ?        00:00:00 watchdog/0</span><br><span class="line">    5 ?        00:00:00 migration/1</span><br><span class="line">    6 ?        00:00:15 ksoftirqd/1</span><br><span class="line">....</span><br><span class="line">.....</span><br><span class="line"> 4881 ?        00:53:28 java</span><br><span class="line"> 4885 tty1     00:00:00 mingetty</span><br><span class="line"> 4886 tty2     00:00:00 mingetty</span><br><span class="line"> 4887 tty3     00:00:00 mingetty</span><br><span class="line"> 4888 tty4     00:00:00 mingetty</span><br><span class="line"> 4891 tty5     00:00:00 mingetty</span><br><span class="line"> 4892 tty6     00:00:00 mingetty</span><br><span class="line"> 4893 ttyS1    00:00:00 agetty</span><br><span class="line">12853 ?        00:00:00 cifsoplockd</span><br><span class="line">12854 ?        00:00:00 cifsdnotifyd</span><br><span class="line">14231 ?        00:10:34 lighttpd</span><br><span class="line">14232 ?        00:00:00 php-cgi</span><br><span class="line">54981 pts/0    00:00:00 vim</span><br><span class="line">55465 ?        00:00:00 php-cgi</span><br><span class="line">55546 ?        00:00:00 bind9-snmp-stat</span><br><span class="line">55704 pts/1    00:00:00 ps</span><br></pre></td></tr></table></figure><h5 id="注意，ps命令就像top命令，可以提供多种信息，但是需要添加参数。"><a href="#注意，ps命令就像top命令，可以提供多种信息，但是需要添加参数。" class="headerlink" title="注意，ps命令就像top命令，可以提供多种信息，但是需要添加参数。"></a>注意，ps命令就像top命令，可以提供多种信息，但是需要添加参数。</h5><p>命令示范：</p><p>显示长格式输出</br><br>Show Long Format Output</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># ps -Al</span><br></pre></td></tr></table></figure><p>要打开完整模式(它将显示传递给进程的命令行参数):</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># ps -Alf</span><br></pre></td></tr></table></figure><p>显示线程(LWP和NLWP)</br><br>#LWP 用户级线程和内核级线程之间的中间层   #NLWP 轻量线程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># ps -AlFH</span><br></pre></td></tr></table></figure><p>监视进程后的线程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># ps -AlLm</span><br></pre></td></tr></table></figure><p>打印服务器上的所有进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># ps ax</span><br><span class="line"># ps axi</span><br></pre></td></tr></table></figure><p>打印进程树</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ps -ejH</span><br><span class="line"># ps axjf</span><br><span class="line"># pstree</span><br></pre></td></tr></table></figure><p>获取Linux进程的安全信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ps -eo euser,ruser,suser,fuser,f,comm,label</span><br><span class="line"># ps axZ</span><br><span class="line"># ps -eM</span><br></pre></td></tr></table></figure><p>让我们打印每个以Vivek用户运行的进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -U vivek -u vivek u</span><br></pre></td></tr></table></figure><p>配置ps自定义格式的命令输出信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ps -eo pid,tid,class,rtprio,ni,pri,psr,pcpu,stat,wchan:14,comm</span><br><span class="line"># ps axo stat,euid,ruid,tty,tpgid,sess,pgrp,ppid,pid,pcpu,comm</span><br><span class="line"># ps -eopid,tt,user,fname,tmout,f,wchan</span><br></pre></td></tr></table></figure><p>只显示httpd的进程号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># ps -C lighttpd -o pid=</span><br><span class="line"></span><br><span class="line">$ or</span><br><span class="line"></span><br><span class="line"># pgrep -u vivek php-cgi</span><br></pre></td></tr></table></figure><p>打印进程55977的名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># ps -p 55977 -o comm=</span><br></pre></td></tr></table></figure><p>显示前10个内存消耗进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># ps -auxf | sort -nr -k 4 | head -10</span><br></pre></td></tr></table></figure><p>显示前10个CPU消耗进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># ps -auxf | sort -nr -k 3 | head -10</span><br></pre></td></tr></table></figure><hr><h1 id="6-free-显示Linux服务器内存使用情况"><a href="#6-free-显示Linux服务器内存使用情况" class="headerlink" title="6 free -显示Linux服务器内存使用情况"></a>6 free -显示Linux服务器内存使用情况</h1><p>free命令显示系统中空闲和使用的物理和交换内存的总量，以及内核使用的缓冲区</br><br>The free command shows the total amount of free and used physical and swap memory in the system, as well as the buffers used by the kernel.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># free</span><br></pre></td></tr></table></figure><p>服务器示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">            total       used       free     shared    buffers     cached</span><br><span class="line">Mem:      12302896    9739664    2563232          0     523124    5154740</span><br><span class="line">-/+ buffers/cache:    4061800    8241096</span><br><span class="line">Swap:      1052248          0    1052248</span><br></pre></td></tr></table></figure><hr><h1 id="7-iostat—监视Linux平均CPU负载和磁盘活动"><a href="#7-iostat—监视Linux平均CPU负载和磁盘活动" class="headerlink" title="7 iostat—监视Linux平均CPU负载和磁盘活动"></a>7 iostat—监视Linux平均CPU负载和磁盘活动</h1><p>我们使用iostat命令报告Linux操作系统下的设备、分区和网络文件系统(NFS)的中央处理单元(CPU)统计数据和输入&#x2F;输出统计数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iostat</span><br></pre></td></tr></table></figure><p>服务器示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Linux 2.6.18-128.1.14.el5 (www03.nixcraft.in) 06/26/2009</span><br><span class="line"></span><br><span class="line">avg-cpu:  %user   %nice %system %iowait  %steal   %idle</span><br><span class="line">           3.50    0.09    0.51    0.03    0.00   95.86</span><br><span class="line"></span><br><span class="line">Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn</span><br><span class="line">sda              22.04        31.88       512.03   16193351  260102868</span><br><span class="line">sda1              0.00         0.00         0.00       2166        180</span><br><span class="line">sda2             22.04        31.87       512.03   16189010  260102688</span><br><span class="line">sda3              0.00         0.00         0.00       1615          0</span><br></pre></td></tr></table></figure><p>8 sar -命令收集和报告Linux系统活动<br>sar 命令用于收集、上报和保存系统活动信息。要查看网络日志，输入:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># sar -n DEV | more</span><br></pre></td></tr></table></figure><p>查看24日起日志:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># sar -n DEV -f /var/log/sa/sa24 | more</span><br></pre></td></tr></table></figure><p>你也可以使用sar显示实时使用情况:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># sar 4 5</span><br></pre></td></tr></table></figure><p>服务器示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Linux 2.6.18-128.1.14.el5 (www03.nixcraft.in) 06/26/2022</span><br><span class="line"></span><br><span class="line">06:45:12 PM       CPU     %user     %nice   %system   %iowait    %steal     %idle</span><br><span class="line">06:45:16 PM       all      2.00      0.00      0.22      0.00      0.00     97.78</span><br><span class="line">06:45:20 PM       all      2.07      0.00      0.38      0.03      0.00     97.52</span><br><span class="line">06:45:24 PM       all      0.94      0.00      0.28      0.00      0.00     98.78</span><br><span class="line">06:45:28 PM       all      1.56      0.00      0.22      0.00      0.00     98.22</span><br><span class="line">06:45:32 PM       all      3.53      0.00      0.25      0.03      0.00     96.19</span><br><span class="line">Average:          all      2.02      0.00      0.27      0.01      0.00     97.70</span><br></pre></td></tr></table></figure><hr><h1 id="9-mpstat-监视Linux上的多处理器使用情况"><a href="#9-mpstat-监视Linux上的多处理器使用情况" class="headerlink" title="9 mpstat -监视Linux上的多处理器使用情况"></a>9 mpstat -监视Linux上的多处理器使用情况</h1><p>Mpstat命令显示每个可用处理器的活动，处理器0是第一个。mpstat -P ALL显示每个处理器的平均CPU利用率:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mpstat -P ALL`</span><br></pre></td></tr></table></figure><p>服务器示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Linux 2.6.18-128.1.14.el5 (www03.nixcraft.in) 06/26/2022</span><br><span class="line"></span><br><span class="line">06:48:11 PM  CPU   %user   %nice    %sys %iowait    %irq   %soft  %steal   %idle    intr/s</span><br><span class="line">06:48:11 PM  all    3.50    0.09    0.34    0.03    0.01    0.17    0.00   95.86   1218.04</span><br><span class="line">06:48:11 PM    0    3.44    0.08    0.31    0.02    0.00    0.12    0.00   96.04   1000.31</span><br><span class="line">06:48:11 PM    1    3.10    0.08    0.32    0.09    0.02    0.11    0.00   96.28     34.93</span><br><span class="line">06:48:11 PM    2    4.16    0.11    0.36    0.02    0.00    0.11    0.00   95.25      0.00</span><br><span class="line">06:48:11 PM    3    3.77    0.11    0.38    0.03    0.01    0.24    0.00   95.46     44.80</span><br><span class="line">06:48:11 PM    4    2.96    0.07    0.29    0.04    0.02    0.10    0.00   96.52     25.91</span><br><span class="line">06:48:11 PM    5    3.26    0.08    0.28    0.03    0.01    0.10    0.00   96.23     14.98</span><br><span class="line">06:48:11 PM    6    4.00    0.10    0.34    0.01    0.00    0.13    0.00   95.42      3.75</span><br><span class="line">06:48:11 PM    7    3.30    0.11    0.39    0.03    0.01    0.46    0.00   95.69     76.89</span><br></pre></td></tr></table></figure><h1 id="10-pmap—监视Linux上的进程内存使用情况"><a href="#10-pmap—监视Linux上的进程内存使用情况" class="headerlink" title="10 pmap—监视Linux上的进程内存使用情况"></a>10 pmap—监视Linux上的进程内存使用情况</h1><p>Pmap命令报告进程的内存映射。使用此命令查找内存瓶颈的原因。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pmap -d PID  </span><br></pre></td></tr></table></figure><p>要显示pid 47394的进程内存信息，输入:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pmap -d 47394</span><br></pre></td></tr></table></figure><p>服务器示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">47394:   /usr/bin/php-cgi</span><br><span class="line">Address           Kbytes Mode  Offset           Device    Mapping</span><br><span class="line">0000000000400000    2584 r-x-- 0000000000000000 008:00002 php-cgi</span><br><span class="line">0000000000886000     140 rw--- 0000000000286000 008:00002 php-cgi</span><br><span class="line">00000000008a9000      52 rw--- 00000000008a9000 000:00000   [ anon ]</span><br><span class="line">0000000000aa8000      76 rw--- 00000000002a8000 008:00002 php-cgi</span><br><span class="line">000000000f678000    1980 rw--- 000000000f678000 000:00000   [ anon ]</span><br><span class="line">000000314a600000     112 r-x-- 0000000000000000 008:00002 ld-2.5.so</span><br><span class="line">000000314a81b000       4 r---- 000000000001b000 008:00002 ld-2.5.so</span><br><span class="line">000000314a81c000       4 rw--- 000000000001c000 008:00002 ld-2.5.so</span><br><span class="line">000000314aa00000    1328 r-x-- 0000000000000000 008:00002 libc-2.5.so</span><br><span class="line">000000314ab4c000    2048 ----- 000000000014c000 008:00002 libc-2.5.so</span><br><span class="line">.....</span><br><span class="line">......</span><br><span class="line">..</span><br><span class="line">00002af8d48fd000       4 rw--- 0000000000006000 008:00002 xsl.so</span><br><span class="line">00002af8d490c000      40 r-x-- 0000000000000000 008:00002 libnss_files-2.5.so</span><br><span class="line">00002af8d4916000    2044 ----- 000000000000a000 008:00002 libnss_files-2.5.so</span><br><span class="line">00002af8d4b15000       4 r---- 0000000000009000 008:00002 libnss_files-2.5.so</span><br><span class="line">00002af8d4b16000       4 rw--- 000000000000a000 008:00002 libnss_files-2.5.so</span><br><span class="line">00002af8d4b17000  768000 rw-s- 0000000000000000 000:00009 zero (deleted)</span><br><span class="line">00007fffc95fe000      84 rw--- 00007ffffffea000 000:00000   [ stack ]</span><br><span class="line">ffffffffff600000    8192 ----- 0000000000000000 000:00000   [ anon ]</span><br><span class="line">mapped: 933712K    writeable/private: 4304K    shared: 768000K</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;每个系统管理员应该知道的10个监控工具&quot;&gt;&lt;a href=&quot;#每个系统管理员应该知道的10个监控工具&quot; class=&quot;headerlink&quot; title=&quot;每个系统管理员应该知道的10个监控工具&quot;&gt;&lt;/a&gt;每个系统管理员应该知道的10个监控工具&lt;/h1&gt;&lt;p&gt;10</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>about-SSH</title>
    <link href="http://example.com/2022/10/11/about-centos-SSH/"/>
    <id>http://example.com/2022/10/11/about-centos-SSH/</id>
    <published>2022-10-11T11:16:15.000Z</published>
    <updated>2022-10-12T09:16:09.943Z</updated>
    
    <content type="html"><![CDATA[<h1 id="about-CentOS-SSH"><a href="#about-CentOS-SSH" class="headerlink" title="about CentOS SSH"></a>about CentOS SSH</h1><p>#关于CentOS系统的SSH服务 </p><h2 id="Modify-Remote-Port"><a href="#Modify-Remote-Port" class="headerlink" title="Modify Remote Port"></a>Modify Remote Port</h2><h2 id="修改远程端口"><a href="#修改远程端口" class="headerlink" title="修改远程端口"></a>修改远程端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line">#port=22</span><br><span class="line">port=xxx  #修改为要求的端口号</span><br></pre></td></tr></table></figure><h2 id="Permit-Port"><a href="#Permit-Port" class="headerlink" title="Permit Port"></a>Permit Port</h2><h2 id="放行端口"><a href="#放行端口" class="headerlink" title="放行端口"></a>放行端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=xxx/tcp  #放行修改的端口</span><br><span class="line">firewall-cmd --permanent --remove-port=xxx/tcp  #移除放行端口</span><br><span class="line">firewall-cmd --reload   #重启防火墙</span><br><span class="line">systemctl restart firewalld.service  #重启防火墙</span><br><span class="line">firewall-cmd --list-ports   #查看防火墙当前放行的端口</span><br><span class="line">firewall-cmd --status   #查看防火墙当前状态</span><br><span class="line">systemctl disable firewalld  #永久关闭防火墙</span><br></pre></td></tr></table></figure><h2 id="Install-SSH"><a href="#Install-SSH" class="headerlink" title="Install SSH"></a>Install SSH</h2><h2 id="安装SSH服务"><a href="#安装SSH服务" class="headerlink" title="安装SSH服务"></a>安装SSH服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install openshh-server</span><br></pre></td></tr></table></figure><h1 id="about-Ubuntu-SSH"><a href="#about-Ubuntu-SSH" class="headerlink" title="about Ubuntu SSH"></a>about Ubuntu SSH</h1><h1 id="关于Ubuntu系统的SSH服务"><a href="#关于Ubuntu系统的SSH服务" class="headerlink" title="关于Ubuntu系统的SSH服务"></a>关于Ubuntu系统的SSH服务</h1><h1 id="debian系统与Ubuntu系统类似"><a href="#debian系统与Ubuntu系统类似" class="headerlink" title="debian系统与Ubuntu系统类似"></a>debian系统与Ubuntu系统类似</h1><h2 id="Midify-Remote-Port"><a href="#Midify-Remote-Port" class="headerlink" title="Midify Remote Port"></a>Midify Remote Port</h2><h2 id="修改远程端口-1"><a href="#修改远程端口-1" class="headerlink" title="修改远程端口"></a>修改远程端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line">#port=22</span><br><span class="line">port=xxx   #修改成要求的端口</span><br></pre></td></tr></table></figure><h2 id="重启sshd服务"><a href="#重启sshd服务" class="headerlink" title="重启sshd服务"></a>重启sshd服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><h2 id="允许root用户远程"><a href="#允许root用户远程" class="headerlink" title="允许root用户远程"></a>允许root用户远程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line">修改其中的参数PermitRootLogin no修改为 PermitRootLogin yes</span><br></pre></td></tr></table></figure><h2 id="重启远程服务"><a href="#重启远程服务" class="headerlink" title="重启远程服务"></a>重启远程服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart ssh</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;about-CentOS-SSH&quot;&gt;&lt;a href=&quot;#about-CentOS-SSH&quot; class=&quot;headerlink&quot; title=&quot;about CentOS SSH&quot;&gt;&lt;/a&gt;about CentOS SSH&lt;/h1&gt;&lt;p&gt;#关于CentOS系统的SS</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Query-Linux-system-version</title>
    <link href="http://example.com/2022/10/11/Query-system-version/"/>
    <id>http://example.com/2022/10/11/Query-system-version/</id>
    <published>2022-10-11T10:00:46.000Z</published>
    <updated>2022-10-11T10:41:12.788Z</updated>
    
    <content type="html"><![CDATA[<h1 id="welcome-to-my-blog-This-is-an-article-about-how-to-check-the-linux-version-hpoe-that-helps"><a href="#welcome-to-my-blog-This-is-an-article-about-how-to-check-the-linux-version-hpoe-that-helps" class="headerlink" title="welcome to my blog.This is an article about how to check the linux version.hpoe that helps."></a>welcome to my blog.This is an article about how to check the linux version.hpoe that helps.</h1><h1 id="欢迎来到我的博客。这是一篇关于如何查询linux版本的文章-希望对你有所帮助。"><a href="#欢迎来到我的博客。这是一篇关于如何查询linux版本的文章-希望对你有所帮助。" class="headerlink" title="欢迎来到我的博客。这是一篇关于如何查询linux版本的文章,希望对你有所帮助。"></a>欢迎来到我的博客。这是一篇关于如何查询linux版本的文章,希望对你有所帮助。</h1><h2 id="Quit-linux-version"><a href="#Quit-linux-version" class="headerlink" title="Quit linux version"></a>Quit linux version</h2><h2 id="查询linux版本"><a href="#查询linux版本" class="headerlink" title="查询linux版本"></a>查询linux版本</h2><h3 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/redhat-release</span><br></pre></td></tr></table></figure><h3 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat /lsb_release</span><br><span class="line"></span><br><span class="line">$ lsb_release</span><br></pre></td></tr></table></figure><h3 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a>Debian</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/issue </span><br></pre></td></tr></table></figure><h3 id="Fedora"><a href="#Fedora" class="headerlink" title="Fedora"></a>Fedora</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/redhat-release</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;welcome-to-my-blog-This-is-an-article-about-how-to-check-the-linux-version-hpoe-that-helps&quot;&gt;&lt;a href=&quot;#welcome-to-my-blog-This-is-an-</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>about cenntOS Network Card Config</title>
    <link href="http://example.com/2022/10/08/about-centos-netcfg/"/>
    <id>http://example.com/2022/10/08/about-centos-netcfg/</id>
    <published>2022-10-08T07:33:25.232Z</published>
    <updated>2022-10-11T16:01:40.197Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to my blog. This is anartice about the network card configuration of the centos .<br>欢迎来到我的博客。这是一篇关于centos网卡配置的文章。</p><h1 id="Operations-you-must-know"><a href="#Operations-you-must-know" class="headerlink" title="Operations you must know"></a>Operations you must know</h1><h1 id="你必须知道的事情"><a href="#你必须知道的事情" class="headerlink" title="你必须知道的事情"></a>你必须知道的事情</h1><h2 id="How-to-check-the-network-card-name"><a href="#How-to-check-the-network-card-name" class="headerlink" title="How to check the network card name"></a>How to check the network card name</h2><h2 id="如何查看网卡名"><a href="#如何查看网卡名" class="headerlink" title="如何查看网卡名"></a>如何查看网卡名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ip a</span><br></pre></td></tr></table></figure><h2 id="Open-the-centos-network-card-path"><a href="#Open-the-centos-network-card-path" class="headerlink" title="Open the centos network card path"></a>Open the centos network card path</h2><h2 id="打开centos网卡路径"><a href="#打开centos网卡路径" class="headerlink" title="打开centos网卡路径"></a>打开centos网卡路径</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /etc/sysconfig/network-scripts/ifcfg-xxx</span><br></pre></td></tr></table></figure><h2 id="Restart-the-network-card"><a href="#Restart-the-network-card" class="headerlink" title="Restart the network card"></a>Restart the network card</h2><h2 id="重启网卡"><a href="#重启网卡" class="headerlink" title="重启网卡"></a>重启网卡</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/network resrtart</span><br><span class="line">ifup xxx</span><br></pre></td></tr></table></figure><h2 id="Use-vi-or-nano-editor-to-edit-network-card-configuration-file"><a href="#Use-vi-or-nano-editor-to-edit-network-card-configuration-file" class="headerlink" title="Use vi or nano editor to edit network card configuration file"></a>Use vi or nano editor to edit network card configuration file</h2><p>使用vi或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-xxx</span><br><span class="line">nano /etc/sysconfig/network-scripts/ifcfg-xxx</span><br><span class="line"><span class="comment">### vi</span></span><br><span class="line">:wq  <span class="comment">#save</span></span><br><span class="line">:q     <span class="comment">#exit</span></span><br><span class="line">:wq!  <span class="comment">#force to wite</span></span><br><span class="line">:q!    <span class="comment">#force to exit</span></span><br><span class="line"><span class="comment">### nano </span></span><br><span class="line">ctrl + o  <span class="comment">#save</span></span><br><span class="line">ctrl + x  <span class="comment">#exit</span></span><br></pre></td></tr></table></figure><h3 id="Format"><a href="#Format" class="headerlink" title="Format"></a>Format</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">BOOTPROTO=static</span><br><span class="line">DEVICE=network card name</span><br><span class="line">ONBOOT=<span class="built_in">yes</span></span><br><span class="line">IPADDR=</span><br><span class="line">NETMASK=</span><br><span class="line">IPADDR2=</span><br><span class="line">NETMASK2=</span><br><span class="line">GATEWAY=</span><br><span class="line">DNS1=8.8.8.8</span><br><span class="line">DNS2=223.5.5.5</span><br></pre></td></tr></table></figure><p>Thanks for reading. I don’t know if it was helpful.</p><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to my blog. This is anartice about the network card configuration of the centos .&lt;br&gt;欢迎来到我的博客。这是一篇关于centos网卡配置的文章。&lt;/p&gt;
&lt;h1 id=&quot;Op</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>network card config</title>
    <link href="http://example.com/2022/10/06/About-Linux-Network/"/>
    <id>http://example.com/2022/10/06/About-Linux-Network/</id>
    <published>2022-10-06T08:43:05.957Z</published>
    <updated>2022-10-10T18:01:58.933Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="title-centos-ubuntu-debian-with-netwoks"><a href="#title-centos-ubuntu-debian-with-netwoks" class="headerlink" title="title:centos ubuntu debian with netwoks"></a>title:centos ubuntu debian with netwoks</h2><h1 id="一、Debian10网卡配置"><a href="#一、Debian10网卡配置" class="headerlink" title="一、Debian10网卡配置"></a>一、Debian10网卡配置</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/network/interfaces</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 多IP配置</span><br><span class="line">auto eno1</span><br><span class="line">iface eno1 inet static</span><br><span class="line">        address 192.168.10.1/24</span><br><span class="line">        gateway 192.168.10.254</span><br><span class="line">        dns-nameservers 8.8.8.8</span><br><span class="line">auto eno1:0</span><br><span class="line">iface eno1:0 inet static</span><br><span class="line">        address 192.168.10.2/24</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="nano使用"><a href="#nano使用" class="headerlink" title="nano使用"></a>nano使用</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ctrl+o   #保存配置</span><br><span class="line">ctrl+x   #退出</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>#debian重启网卡命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart networking</span><br><span class="line">/etc/init.d/networking restart</span><br><span class="line">service networking restart</span><br></pre></td></tr></table></figure><h1 id="二、Debian7-x2F-8-x2F-9网卡配置"><a href="#二、Debian7-x2F-8-x2F-9网卡配置" class="headerlink" title="二、Debian7&#x2F;8&#x2F;9网卡配置"></a>二、Debian7&#x2F;8&#x2F;9网卡配置</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/network/interface</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">网卡配置多IP</span></span><br><span class="line">```</span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static</span><br><span class="line">address 192.168.10.1</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 192.168.10.254</span><br><span class="line">dns-nameservers 8.8.8.8</span><br><span class="line">auto eth0:0</span><br><span class="line">address 192.168.10.2</span><br><span class="line">netmask 255.255.255.0</span><br></pre></td></tr></table></figure><p>ctrl+o   #保存配置 + 回车<br>ctrl+x   #退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#下面三条命令都可以使用</span><br><span class="line">systemctl restart networking</span><br><span class="line">/etc/init.d/networking restart</span><br><span class="line">service networking restart</span><br></pre></td></tr></table></figure><h1 id="三、ubuntu16-x2F-ubuntu17网卡配置"><a href="#三、ubuntu16-x2F-ubuntu17网卡配置" class="headerlink" title="三、ubuntu16&#x2F;ubuntu17网卡配置"></a>三、ubuntu16&#x2F;ubuntu17网卡配置</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi  /etc/network/interfaces</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">auto eno1</span><br><span class="line">iface eno1 inet static</span><br><span class="line">address 10.0.0.0</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 10.0.0.254</span><br><span class="line">dns-nameservers 8.8.8.8</span><br><span class="line">auto eno1:0    #第二个IP</span><br><span class="line">iface eno1:0 inet static</span><br><span class="line">address 10.0.0.0</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">auto eno1:1    #第三个，更多以此类推</span><br><span class="line">iface eno1:1 inet static</span><br><span class="line">address 10.0.0.0</span><br><span class="line">netmask 255.255.255.0</span><br></pre></td></tr></table></figure><p>重启网卡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/networking restart</span><br><span class="line">或指定启动关闭某个网卡命令</span><br><span class="line">ifdown enp0s3    （关闭网卡enp0s3）</span><br><span class="line">ifup   enp0s3    (启动网卡enp0s3)</span><br><span class="line">service network-manager restart </span><br></pre></td></tr></table></figure><h1 id="四、ubuntu18-ubuntu20网卡配置"><a href="#四、ubuntu18-ubuntu20网卡配置" class="headerlink" title="四、ubuntu18-ubuntu20网卡配置"></a>四、ubuntu18-ubuntu20网卡配置</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/netplan/**  ##默认01/00数字开头文件</span><br></pre></td></tr></table></figure><p>此版本对配置文件格式要求严格，错一步就会导致整张网卡报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">    eno1:</span><br><span class="line">      addresses: [ 172.25.1.1/24,172.25.1.2/24 ]</span><br><span class="line">      gateway4: 172.25.1.254</span><br><span class="line">      nameservers:</span><br><span class="line">          addresses: [ 8.8.8.8,114.114.114.114 ]</span><br><span class="line">    eno2:</span><br><span class="line">      addresses: [ 192.168.1.1/24 ]</span><br></pre></td></tr></table></figure><p>重启网卡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">netplan apply</span><br><span class="line"></span><br><span class="line">ifconfig eth0 down</span><br><span class="line"></span><br><span class="line">ifconfig eth0 up #eth0指网卡名</span><br></pre></td></tr></table></figure><h1 id="五、Centos7-x2F-8网卡配置"><a href="#五、Centos7-x2F-8网卡配置" class="headerlink" title="五、Centos7&#x2F;8网卡配置"></a>五、Centos7&#x2F;8网卡配置</h1><p>vi &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eno1 #(ifcfg-网卡名)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">BOOTPROTO=static</span><br><span class="line">DEVICE=eno1</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=10.10.0.0</span><br><span class="line">Netmask=255.255.255.0</span><br><span class="line">#IPADDR1=10.10.0.1</span><br><span class="line">#Netmask1=255.255.255.0</span><br><span class="line">GATEWAY=10.10.0.254</span><br><span class="line">DNS1=8.8.8.8</span><br><span class="line">DNS2=114.114.114.114</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#centos7 重启网卡</span><br><span class="line">#命令1</span><br><span class="line">/etc/init.d/network restart</span><br><span class="line">#命令2</span><br><span class="line">systemctl restart network  </span><br><span class="line"></span><br><span class="line">#centos8重启网卡</span><br><span class="line">nmcli connection reload</span><br><span class="line"></span><br><span class="line">#不能立即生效的命令</span><br><span class="line">nmcli d c eno1</span><br><span class="line"></span><br><span class="line">nmcli c r eno1</span><br><span class="line"></span><br><span class="line">nmcli d r eno1</span><br><span class="line"></span><br><span class="line">#一次运行</span><br><span class="line">nmcli d c eno1&amp;&amp;nmcli c r eno1&amp;&amp;nmcli d r eno1 </span><br></pre></td></tr></table></figure><p>重启失败，检查网卡配置文件内容，如无误，centos6建议直接重启，centos7一般是NetworkManager服务限制了，可以关闭服务重试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop NetworkManager &amp;&amp; systemctl restart network &amp;&amp; sleep 5s &amp;&amp; systemctl start NetworkManager</span><br></pre></td></tr></table></figure><p>NetworkManager服务开启也可以用<code>nmtui</code>命令进入图形界面配置网卡</p><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;title-centos-ubuntu-debian-with-netwoks&quot;&gt;&lt;a href=&quot;#title-centos-ubuntu-debian-with-netwoks&quot; class=&quot;headerlink&quot; title=&quot;title:cen</summary>
      
    
    
    
    
  </entry>
  
</feed>
